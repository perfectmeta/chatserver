// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

package chatserver.gen;

/**
 * Protobuf type {@code ChatResponseStream}
 */
public final class ChatResponseStream extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ChatResponseStream)
    ChatResponseStreamOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ChatResponseStream.newBuilder() to construct.
  private ChatResponseStream(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ChatResponseStream() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ChatResponseStream();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ChatResponseStream(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            chatserver.gen.Message.Builder subBuilder = null;
            if (responseCase_ == 1) {
              subBuilder = ((chatserver.gen.Message) response_).toBuilder();
            }
            response_ =
                input.readMessage(chatserver.gen.Message.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((chatserver.gen.Message) response_);
              response_ = subBuilder.buildPartial();
            }
            responseCase_ = 1;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            responseCase_ = 2;
            response_ = s;
            break;
          }
          case 26: {
            responseCase_ = 3;
            response_ = input.readBytes();
            break;
          }
          case 34: {
            chatserver.gen.Message.Builder subBuilder = null;
            if (responseCase_ == 4) {
              subBuilder = ((chatserver.gen.Message) response_).toBuilder();
            }
            response_ =
                input.readMessage(chatserver.gen.Message.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((chatserver.gen.Message) response_);
              response_ = subBuilder.buildPartial();
            }
            responseCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return chatserver.gen.Chat.internal_static_ChatResponseStream_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return chatserver.gen.Chat.internal_static_ChatResponseStream_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            chatserver.gen.ChatResponseStream.class, chatserver.gen.ChatResponseStream.Builder.class);
  }

  private int responseCase_ = 0;
  private java.lang.Object response_;
  public enum ResponseCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    REQUESTMESSAGE(1),
    TEXT(2),
    AUDIO(3),
    RESPONSEMESSAGE(4),
    RESPONSE_NOT_SET(0);
    private final int value;
    private ResponseCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResponseCase valueOf(int value) {
      return forNumber(value);
    }

    public static ResponseCase forNumber(int value) {
      switch (value) {
        case 1: return REQUESTMESSAGE;
        case 2: return TEXT;
        case 3: return AUDIO;
        case 4: return RESPONSEMESSAGE;
        case 0: return RESPONSE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ResponseCase
  getResponseCase() {
    return ResponseCase.forNumber(
        responseCase_);
  }

  public static final int REQUESTMESSAGE_FIELD_NUMBER = 1;
  /**
   * <pre>
   * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
   * message 至少有3个状态，正在asr生成，正在发送，服务器确认
   * </pre>
   *
   * <code>.Message requestMessage = 1;</code>
   * @return Whether the requestMessage field is set.
   */
  @java.lang.Override
  public boolean hasRequestMessage() {
    return responseCase_ == 1;
  }
  /**
   * <pre>
   * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
   * message 至少有3个状态，正在asr生成，正在发送，服务器确认
   * </pre>
   *
   * <code>.Message requestMessage = 1;</code>
   * @return The requestMessage.
   */
  @java.lang.Override
  public chatserver.gen.Message getRequestMessage() {
    if (responseCase_ == 1) {
       return (chatserver.gen.Message) response_;
    }
    return chatserver.gen.Message.getDefaultInstance();
  }
  /**
   * <pre>
   * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
   * message 至少有3个状态，正在asr生成，正在发送，服务器确认
   * </pre>
   *
   * <code>.Message requestMessage = 1;</code>
   */
  @java.lang.Override
  public chatserver.gen.MessageOrBuilder getRequestMessageOrBuilder() {
    if (responseCase_ == 1) {
       return (chatserver.gen.Message) response_;
    }
    return chatserver.gen.Message.getDefaultInstance();
  }

  public static final int TEXT_FIELD_NUMBER = 2;
  /**
   * <pre>
   * chatgpt生成
   * </pre>
   *
   * <code>string text = 2;</code>
   * @return The text.
   */
  public java.lang.String getText() {
    java.lang.Object ref = "";
    if (responseCase_ == 2) {
      ref = response_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (responseCase_ == 2) {
        response_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * chatgpt生成
   * </pre>
   *
   * <code>string text = 2;</code>
   * @return The bytes for text.
   */
  public com.google.protobuf.ByteString
      getTextBytes() {
    java.lang.Object ref = "";
    if (responseCase_ == 2) {
      ref = response_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (responseCase_ == 2) {
        response_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int AUDIO_FIELD_NUMBER = 3;
  /**
   * <pre>
   * tts生成
   * </pre>
   *
   * <code>bytes audio = 3;</code>
   * @return The audio.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getAudio() {
    if (responseCase_ == 3) {
      return (com.google.protobuf.ByteString) response_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }

  public static final int RESPONSEMESSAGE_FIELD_NUMBER = 4;
  /**
   * <pre>
   * 最后chatgpt回应的消息，汇总到这，有messageId
   * </pre>
   *
   * <code>.Message responseMessage = 4;</code>
   * @return Whether the responseMessage field is set.
   */
  @java.lang.Override
  public boolean hasResponseMessage() {
    return responseCase_ == 4;
  }
  /**
   * <pre>
   * 最后chatgpt回应的消息，汇总到这，有messageId
   * </pre>
   *
   * <code>.Message responseMessage = 4;</code>
   * @return The responseMessage.
   */
  @java.lang.Override
  public chatserver.gen.Message getResponseMessage() {
    if (responseCase_ == 4) {
       return (chatserver.gen.Message) response_;
    }
    return chatserver.gen.Message.getDefaultInstance();
  }
  /**
   * <pre>
   * 最后chatgpt回应的消息，汇总到这，有messageId
   * </pre>
   *
   * <code>.Message responseMessage = 4;</code>
   */
  @java.lang.Override
  public chatserver.gen.MessageOrBuilder getResponseMessageOrBuilder() {
    if (responseCase_ == 4) {
       return (chatserver.gen.Message) response_;
    }
    return chatserver.gen.Message.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (responseCase_ == 1) {
      output.writeMessage(1, (chatserver.gen.Message) response_);
    }
    if (responseCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, response_);
    }
    if (responseCase_ == 3) {
      output.writeBytes(
          3, (com.google.protobuf.ByteString) response_);
    }
    if (responseCase_ == 4) {
      output.writeMessage(4, (chatserver.gen.Message) response_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (responseCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (chatserver.gen.Message) response_);
    }
    if (responseCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, response_);
    }
    if (responseCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(
            3, (com.google.protobuf.ByteString) response_);
    }
    if (responseCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (chatserver.gen.Message) response_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof chatserver.gen.ChatResponseStream)) {
      return super.equals(obj);
    }
    chatserver.gen.ChatResponseStream other = (chatserver.gen.ChatResponseStream) obj;

    if (!getResponseCase().equals(other.getResponseCase())) return false;
    switch (responseCase_) {
      case 1:
        if (!getRequestMessage()
            .equals(other.getRequestMessage())) return false;
        break;
      case 2:
        if (!getText()
            .equals(other.getText())) return false;
        break;
      case 3:
        if (!getAudio()
            .equals(other.getAudio())) return false;
        break;
      case 4:
        if (!getResponseMessage()
            .equals(other.getResponseMessage())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (responseCase_) {
      case 1:
        hash = (37 * hash) + REQUESTMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getRequestMessage().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
        break;
      case 3:
        hash = (37 * hash) + AUDIO_FIELD_NUMBER;
        hash = (53 * hash) + getAudio().hashCode();
        break;
      case 4:
        hash = (37 * hash) + RESPONSEMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getResponseMessage().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static chatserver.gen.ChatResponseStream parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static chatserver.gen.ChatResponseStream parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static chatserver.gen.ChatResponseStream parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static chatserver.gen.ChatResponseStream parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static chatserver.gen.ChatResponseStream parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static chatserver.gen.ChatResponseStream parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static chatserver.gen.ChatResponseStream parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static chatserver.gen.ChatResponseStream parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static chatserver.gen.ChatResponseStream parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static chatserver.gen.ChatResponseStream parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static chatserver.gen.ChatResponseStream parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static chatserver.gen.ChatResponseStream parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(chatserver.gen.ChatResponseStream prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ChatResponseStream}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ChatResponseStream)
      chatserver.gen.ChatResponseStreamOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return chatserver.gen.Chat.internal_static_ChatResponseStream_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return chatserver.gen.Chat.internal_static_ChatResponseStream_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              chatserver.gen.ChatResponseStream.class, chatserver.gen.ChatResponseStream.Builder.class);
    }

    // Construct using chatserver.gen.ChatResponseStream.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      responseCase_ = 0;
      response_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return chatserver.gen.Chat.internal_static_ChatResponseStream_descriptor;
    }

    @java.lang.Override
    public chatserver.gen.ChatResponseStream getDefaultInstanceForType() {
      return chatserver.gen.ChatResponseStream.getDefaultInstance();
    }

    @java.lang.Override
    public chatserver.gen.ChatResponseStream build() {
      chatserver.gen.ChatResponseStream result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public chatserver.gen.ChatResponseStream buildPartial() {
      chatserver.gen.ChatResponseStream result = new chatserver.gen.ChatResponseStream(this);
      if (responseCase_ == 1) {
        if (requestMessageBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = requestMessageBuilder_.build();
        }
      }
      if (responseCase_ == 2) {
        result.response_ = response_;
      }
      if (responseCase_ == 3) {
        result.response_ = response_;
      }
      if (responseCase_ == 4) {
        if (responseMessageBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = responseMessageBuilder_.build();
        }
      }
      result.responseCase_ = responseCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof chatserver.gen.ChatResponseStream) {
        return mergeFrom((chatserver.gen.ChatResponseStream)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(chatserver.gen.ChatResponseStream other) {
      if (other == chatserver.gen.ChatResponseStream.getDefaultInstance()) return this;
      switch (other.getResponseCase()) {
        case REQUESTMESSAGE: {
          mergeRequestMessage(other.getRequestMessage());
          break;
        }
        case TEXT: {
          responseCase_ = 2;
          response_ = other.response_;
          onChanged();
          break;
        }
        case AUDIO: {
          setAudio(other.getAudio());
          break;
        }
        case RESPONSEMESSAGE: {
          mergeResponseMessage(other.getResponseMessage());
          break;
        }
        case RESPONSE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      chatserver.gen.ChatResponseStream parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (chatserver.gen.ChatResponseStream) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int responseCase_ = 0;
    private java.lang.Object response_;
    public ResponseCase
        getResponseCase() {
      return ResponseCase.forNumber(
          responseCase_);
    }

    public Builder clearResponse() {
      responseCase_ = 0;
      response_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        chatserver.gen.Message, chatserver.gen.Message.Builder, chatserver.gen.MessageOrBuilder> requestMessageBuilder_;
    /**
     * <pre>
     * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
     * message 至少有3个状态，正在asr生成，正在发送，服务器确认
     * </pre>
     *
     * <code>.Message requestMessage = 1;</code>
     * @return Whether the requestMessage field is set.
     */
    @java.lang.Override
    public boolean hasRequestMessage() {
      return responseCase_ == 1;
    }
    /**
     * <pre>
     * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
     * message 至少有3个状态，正在asr生成，正在发送，服务器确认
     * </pre>
     *
     * <code>.Message requestMessage = 1;</code>
     * @return The requestMessage.
     */
    @java.lang.Override
    public chatserver.gen.Message getRequestMessage() {
      if (requestMessageBuilder_ == null) {
        if (responseCase_ == 1) {
          return (chatserver.gen.Message) response_;
        }
        return chatserver.gen.Message.getDefaultInstance();
      } else {
        if (responseCase_ == 1) {
          return requestMessageBuilder_.getMessage();
        }
        return chatserver.gen.Message.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
     * message 至少有3个状态，正在asr生成，正在发送，服务器确认
     * </pre>
     *
     * <code>.Message requestMessage = 1;</code>
     */
    public Builder setRequestMessage(chatserver.gen.Message value) {
      if (requestMessageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        response_ = value;
        onChanged();
      } else {
        requestMessageBuilder_.setMessage(value);
      }
      responseCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
     * message 至少有3个状态，正在asr生成，正在发送，服务器确认
     * </pre>
     *
     * <code>.Message requestMessage = 1;</code>
     */
    public Builder setRequestMessage(
        chatserver.gen.Message.Builder builderForValue) {
      if (requestMessageBuilder_ == null) {
        response_ = builderForValue.build();
        onChanged();
      } else {
        requestMessageBuilder_.setMessage(builderForValue.build());
      }
      responseCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
     * message 至少有3个状态，正在asr生成，正在发送，服务器确认
     * </pre>
     *
     * <code>.Message requestMessage = 1;</code>
     */
    public Builder mergeRequestMessage(chatserver.gen.Message value) {
      if (requestMessageBuilder_ == null) {
        if (responseCase_ == 1 &&
            response_ != chatserver.gen.Message.getDefaultInstance()) {
          response_ = chatserver.gen.Message.newBuilder((chatserver.gen.Message) response_)
              .mergeFrom(value).buildPartial();
        } else {
          response_ = value;
        }
        onChanged();
      } else {
        if (responseCase_ == 1) {
          requestMessageBuilder_.mergeFrom(value);
        }
        requestMessageBuilder_.setMessage(value);
      }
      responseCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
     * message 至少有3个状态，正在asr生成，正在发送，服务器确认
     * </pre>
     *
     * <code>.Message requestMessage = 1;</code>
     */
    public Builder clearRequestMessage() {
      if (requestMessageBuilder_ == null) {
        if (responseCase_ == 1) {
          responseCase_ = 0;
          response_ = null;
          onChanged();
        }
      } else {
        if (responseCase_ == 1) {
          responseCase_ = 0;
          response_ = null;
        }
        requestMessageBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
     * message 至少有3个状态，正在asr生成，正在发送，服务器确认
     * </pre>
     *
     * <code>.Message requestMessage = 1;</code>
     */
    public chatserver.gen.Message.Builder getRequestMessageBuilder() {
      return getRequestMessageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
     * message 至少有3个状态，正在asr生成，正在发送，服务器确认
     * </pre>
     *
     * <code>.Message requestMessage = 1;</code>
     */
    @java.lang.Override
    public chatserver.gen.MessageOrBuilder getRequestMessageOrBuilder() {
      if ((responseCase_ == 1) && (requestMessageBuilder_ != null)) {
        return requestMessageBuilder_.getMessageOrBuilder();
      } else {
        if (responseCase_ == 1) {
          return (chatserver.gen.Message) response_;
        }
        return chatserver.gen.Message.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 返回一个带messageId的消息，替代原来的临时message，这个对应关系客户端自己来维护
     * message 至少有3个状态，正在asr生成，正在发送，服务器确认
     * </pre>
     *
     * <code>.Message requestMessage = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        chatserver.gen.Message, chatserver.gen.Message.Builder, chatserver.gen.MessageOrBuilder> 
        getRequestMessageFieldBuilder() {
      if (requestMessageBuilder_ == null) {
        if (!(responseCase_ == 1)) {
          response_ = chatserver.gen.Message.getDefaultInstance();
        }
        requestMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            chatserver.gen.Message, chatserver.gen.Message.Builder, chatserver.gen.MessageOrBuilder>(
                (chatserver.gen.Message) response_,
                getParentForChildren(),
                isClean());
        response_ = null;
      }
      responseCase_ = 1;
      onChanged();;
      return requestMessageBuilder_;
    }

    /**
     * <pre>
     * chatgpt生成
     * </pre>
     *
     * <code>string text = 2;</code>
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      java.lang.Object ref = "";
      if (responseCase_ == 2) {
        ref = response_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (responseCase_ == 2) {
          response_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * chatgpt生成
     * </pre>
     *
     * <code>string text = 2;</code>
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = "";
      if (responseCase_ == 2) {
        ref = response_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (responseCase_ == 2) {
          response_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * chatgpt生成
     * </pre>
     *
     * <code>string text = 2;</code>
     * @param value The text to set.
     * @return This builder for chaining.
     */
    public Builder setText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  responseCase_ = 2;
      response_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * chatgpt生成
     * </pre>
     *
     * <code>string text = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearText() {
      if (responseCase_ == 2) {
        responseCase_ = 0;
        response_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * chatgpt生成
     * </pre>
     *
     * <code>string text = 2;</code>
     * @param value The bytes for text to set.
     * @return This builder for chaining.
     */
    public Builder setTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      responseCase_ = 2;
      response_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * tts生成
     * </pre>
     *
     * <code>bytes audio = 3;</code>
     * @return The audio.
     */
    public com.google.protobuf.ByteString getAudio() {
      if (responseCase_ == 3) {
        return (com.google.protobuf.ByteString) response_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * <pre>
     * tts生成
     * </pre>
     *
     * <code>bytes audio = 3;</code>
     * @param value The audio to set.
     * @return This builder for chaining.
     */
    public Builder setAudio(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  responseCase_ = 3;
      response_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tts生成
     * </pre>
     *
     * <code>bytes audio = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearAudio() {
      if (responseCase_ == 3) {
        responseCase_ = 0;
        response_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        chatserver.gen.Message, chatserver.gen.Message.Builder, chatserver.gen.MessageOrBuilder> responseMessageBuilder_;
    /**
     * <pre>
     * 最后chatgpt回应的消息，汇总到这，有messageId
     * </pre>
     *
     * <code>.Message responseMessage = 4;</code>
     * @return Whether the responseMessage field is set.
     */
    @java.lang.Override
    public boolean hasResponseMessage() {
      return responseCase_ == 4;
    }
    /**
     * <pre>
     * 最后chatgpt回应的消息，汇总到这，有messageId
     * </pre>
     *
     * <code>.Message responseMessage = 4;</code>
     * @return The responseMessage.
     */
    @java.lang.Override
    public chatserver.gen.Message getResponseMessage() {
      if (responseMessageBuilder_ == null) {
        if (responseCase_ == 4) {
          return (chatserver.gen.Message) response_;
        }
        return chatserver.gen.Message.getDefaultInstance();
      } else {
        if (responseCase_ == 4) {
          return responseMessageBuilder_.getMessage();
        }
        return chatserver.gen.Message.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 最后chatgpt回应的消息，汇总到这，有messageId
     * </pre>
     *
     * <code>.Message responseMessage = 4;</code>
     */
    public Builder setResponseMessage(chatserver.gen.Message value) {
      if (responseMessageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        response_ = value;
        onChanged();
      } else {
        responseMessageBuilder_.setMessage(value);
      }
      responseCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * 最后chatgpt回应的消息，汇总到这，有messageId
     * </pre>
     *
     * <code>.Message responseMessage = 4;</code>
     */
    public Builder setResponseMessage(
        chatserver.gen.Message.Builder builderForValue) {
      if (responseMessageBuilder_ == null) {
        response_ = builderForValue.build();
        onChanged();
      } else {
        responseMessageBuilder_.setMessage(builderForValue.build());
      }
      responseCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * 最后chatgpt回应的消息，汇总到这，有messageId
     * </pre>
     *
     * <code>.Message responseMessage = 4;</code>
     */
    public Builder mergeResponseMessage(chatserver.gen.Message value) {
      if (responseMessageBuilder_ == null) {
        if (responseCase_ == 4 &&
            response_ != chatserver.gen.Message.getDefaultInstance()) {
          response_ = chatserver.gen.Message.newBuilder((chatserver.gen.Message) response_)
              .mergeFrom(value).buildPartial();
        } else {
          response_ = value;
        }
        onChanged();
      } else {
        if (responseCase_ == 4) {
          responseMessageBuilder_.mergeFrom(value);
        }
        responseMessageBuilder_.setMessage(value);
      }
      responseCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * 最后chatgpt回应的消息，汇总到这，有messageId
     * </pre>
     *
     * <code>.Message responseMessage = 4;</code>
     */
    public Builder clearResponseMessage() {
      if (responseMessageBuilder_ == null) {
        if (responseCase_ == 4) {
          responseCase_ = 0;
          response_ = null;
          onChanged();
        }
      } else {
        if (responseCase_ == 4) {
          responseCase_ = 0;
          response_ = null;
        }
        responseMessageBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 最后chatgpt回应的消息，汇总到这，有messageId
     * </pre>
     *
     * <code>.Message responseMessage = 4;</code>
     */
    public chatserver.gen.Message.Builder getResponseMessageBuilder() {
      return getResponseMessageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 最后chatgpt回应的消息，汇总到这，有messageId
     * </pre>
     *
     * <code>.Message responseMessage = 4;</code>
     */
    @java.lang.Override
    public chatserver.gen.MessageOrBuilder getResponseMessageOrBuilder() {
      if ((responseCase_ == 4) && (responseMessageBuilder_ != null)) {
        return responseMessageBuilder_.getMessageOrBuilder();
      } else {
        if (responseCase_ == 4) {
          return (chatserver.gen.Message) response_;
        }
        return chatserver.gen.Message.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 最后chatgpt回应的消息，汇总到这，有messageId
     * </pre>
     *
     * <code>.Message responseMessage = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        chatserver.gen.Message, chatserver.gen.Message.Builder, chatserver.gen.MessageOrBuilder> 
        getResponseMessageFieldBuilder() {
      if (responseMessageBuilder_ == null) {
        if (!(responseCase_ == 4)) {
          response_ = chatserver.gen.Message.getDefaultInstance();
        }
        responseMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            chatserver.gen.Message, chatserver.gen.Message.Builder, chatserver.gen.MessageOrBuilder>(
                (chatserver.gen.Message) response_,
                getParentForChildren(),
                isClean());
        response_ = null;
      }
      responseCase_ = 4;
      onChanged();;
      return responseMessageBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ChatResponseStream)
  }

  // @@protoc_insertion_point(class_scope:ChatResponseStream)
  private static final chatserver.gen.ChatResponseStream DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new chatserver.gen.ChatResponseStream();
  }

  public static chatserver.gen.ChatResponseStream getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ChatResponseStream>
      PARSER = new com.google.protobuf.AbstractParser<ChatResponseStream>() {
    @java.lang.Override
    public ChatResponseStream parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ChatResponseStream(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ChatResponseStream> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ChatResponseStream> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public chatserver.gen.ChatResponseStream getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

