/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id "io.github.lognet.grpc-spring-boot" version '5.1.1'
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.aliyun.com/repository/central'
    }
    maven { url 'https://repo.spring.io/release' }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    implementation 'org.java-websocket:Java-WebSocket:1.5.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.google.guava:guava:31.1-jre'

//    runtimeOnly 'io.grpc:grpc-netty-shaded:1.54.0'
//    implementation 'io.grpc:grpc-protobuf:1.54.0'
//    implementation 'io.grpc:grpc-stub:1.54.0'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'io.github.lognet:grpc-spring-boot-starter'

    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'chatserver.App'
}

tasks.withType(JavaCompile).forEach {
    it.options.compilerArgs += "--enable-preview"
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
