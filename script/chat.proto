syntax = "proto3";

option java_multiple_files = true;
option java_package = "chatserver.gen";

//////////////////////////////////////聊天模型
// 现在id都用的int64，未来可能会改为string

message Author {
  int32 type = 1; // 0: 真人，1：AI英语老师, 2：AI女友
  int64 userId = 2;
  string name = 3;
}

message AudioStream {
  int64 roomId = 1;
  bytes audio = 4; // 麦克风收录产生
}

message TextStream {
  string text = 4; // asr生成
}

message TextMessage {
  int64 roomId = 1;
  string text = 3;
}

message TextAudioStream {
  string text = 4; // chatgpt生成
  bytes audio = 5; // tts生成
}

message Message {
  int64 roomId = 1;
  Author author = 3;
  int64 createdTime = 4;
  MsgType msgType = 5;
  string text = 6;
  string audioUrl = 7;
  string imageUrl = 8;
  string videoUrl = 9;
}

enum MsgType {
  AUDIO_WITH_TEXT = 0;    // 真人语音聊天
  TEXT_WITH_AUDIO = 1;    // chatgpt回复的
  TEXT = 2;               // 真人打字聊天

  IMAGE = 3;
  VIDEO = 4;
}

message RoomInfo {
  int64 roomId = 1;
  string roomName = 2;

  Author you = 3;  // 先写死，只支持2个人
  Author ai = 4;
  int64 createdTime = 5;

  int64 firstMessageId = 6;
  int64 lastMessageId = 7;
}

message Hello {
}

message EnterRoomReq {
  int64 roomId = 1;
  int64 lastMessageId = 2;
}

//////////////////////////////////////

service ChatService {
  rpc GetRoomList(Hello) returns (stream RoomInfo);
  rpc GetNewMessageStream(Hello) returns (stream Message);

  rpc EnterRoom(EnterRoomReq) returns (stream Message);
  rpc SpeechRecognize(stream AudioStream) returns (stream TextStream);
  rpc Chat(TextMessage) returns (stream TextAudioStream);
}